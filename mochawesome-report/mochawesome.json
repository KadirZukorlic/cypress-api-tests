{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 3,
    "pending": 0,
    "failures": 1,
    "start": "2022-12-01T22:59:23.901Z",
    "end": "2022-12-01T22:59:33.045Z",
    "duration": 9144,
    "testsRegistered": 4,
    "passPercent": 75,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "8de310c8-95e9-412e-8e7a-726a37cc2eaf",
      "title": "",
      "fullFile": "cypress\\integration\\test.cy.ts",
      "file": "cypress\\integration\\test.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "540bcc76-1453-454a-ba27-fb2db14ea8d2",
          "title": "Tests with backend",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify correct request and response",
              "fullTitle": "Tests with backend verify correct request and response",
              "timedOut": null,
              "duration": 4439,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// this test has a problem because only unique title is allowed, and it fails after first time if we dont delete what we posted in this test\ncy.intercept(\"POST\", \"https://api.realworld.io/api/articles/\").as(\"postArticles\");\ncy.contains(\"New Article\").click();\ncy.get('[formcontrolname=\"title\"]').type(\"This is the title\" + randomNumber.toString());\ncy.get('[formcontrolname=\"description\"]').type(\"This is a description\");\ncy.get('[formcontrolname=\"body\"]').type(\"This is a body of the article\");\ncy.contains(\"Publish Article\").click();\ncy.wait(\"@postArticles\").then((xhr) => {\n    console.log(xhr);\n    expect(xhr.response.statusCode).to.equal(200);\n    expect(xhr.request.body.article.body).to.equal(\"This is a body of the article\");\n    expect(xhr.response.body.article.description).to.equal(\"This is a description\");\n});",
              "err": {},
              "uuid": "5ff52b90-d701-4209-b64f-863a5c793a76",
              "parentUUID": "540bcc76-1453-454a-ba27-fb2db14ea8d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "verify popular tags are displayed",
              "fullTitle": "Tests with backend verify popular tags are displayed",
              "timedOut": null,
              "duration": 1370,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\".tag-list\")\n    .should(\"contain\", \"cypress\")\n    .and(\"contain\", \"automation\")\n    .and(\"contain\", \"testing\");",
              "err": {},
              "uuid": "889500d2-e8cd-4078-82c8-c81b4dd6f29e",
              "parentUUID": "540bcc76-1453-454a-ba27-fb2db14ea8d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "verify global feed likes count",
              "fullTitle": "Tests with backend verify global feed likes count",
              "timedOut": null,
              "duration": 1359,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept(\"GET\", \"https://api.realworld.io/api/articles/feed*\", {\n    articles: [],\n    articlesCount: 0,\n});\ncy.intercept(\"GET\", \"https://api.realworld.io/api/articles*\", {\n    fixture: \"articles.json\",\n});\ncy.contains(\"Global Feed\").click();\ncy.get(\"app-article-list button\").then((heartList) => {\n    expect(heartList[0]).to.contain(\"1\");\n    expect(heartList[1]).to.contain(\"5\");\n});\ncy.fixture(\"articles\").then((file) => {\n    const articleLink = file.articles[1].slug;\n    file.articles[1].favoritesCount = 6;\n    cy.intercept(\"POST\", \"https://api.realworld.io/api/articles/\" + articleLink + \"/favorite\", file);\n});\ncy.get(\"app-article-list button\").eq(1).click().should(\"contain\", \"6\");",
              "err": {},
              "uuid": "9efb98aa-a041-40c9-a7bf-6067723ea25c",
              "parentUUID": "540bcc76-1453-454a-ba27-fb2db14ea8d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "delete a new article in a global feed",
              "fullTitle": "Tests with backend delete a new article in a global feed",
              "timedOut": null,
              "duration": 941,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const bodyRequest = {\n    \"article\": {\n        \"tagList\": [],\n        \"title\": \"Request from the API\",\n        \"description\": \"API testing is easy\",\n        \"body\": \"Angular is cool\",\n    },\n};\ncy.get(\"@token\").then((token) => {\n    cy.request({\n        url: Cypress.env(\"apiUrl\") + \"/api/articles/\",\n        headers: { \"Authorization\": \"Token \" + token },\n        method: \"POST\",\n        body: bodyRequest,\n    }).then((response) => {\n        expect(response.status).to.equal(200);\n    });\n    cy.contains(\"Global Feed\").click();\n    cy.get(\".article-preview\").first().click();\n    cy.get(\".article-actions\").contains(\" Delete Article \").click();\n    cy.request({\n        url: Cypress.env(\"apiUrl\") + \"/api/articles?limit=10&offset=0\",\n        headers: { \"Authorization\": \"Token \" + token },\n        method: \"GET\",\n    })\n        .its(\"body\")\n        .then((body) => {\n        // this line is problematic, address it later if you got time :D\n        expect(body.articles[0].title).to.equal(\"Request from the API\");\n    });\n});",
              "err": {
                "message": "CypressError: `cy.request()` failed on:\n\nhttps://api.realworld.io/api/articles/\n\nThe response we received from your web server was:\n\n  > 422: Unprocessable Entity\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: https://api.realworld.io/api/articles/\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Authorization\": \"Token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImthZGlyLnp1a29ybGljQHRlc3QuY29tIiwidXNlcm5hbWUiOiJLYWRpciIsImlhdCI6MTY2OTkzNTU3MiwiZXhwIjoxNjc1MTE5NTcyfQ.WFBZY-ZthYpU1XO1GmawNPtjlCVx5yfAsABem35Z2hI\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/10.11.0 Chrome/106.0.5249.51 Electron/21.0.0 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 118\n}\nBody: {\"article\":{\"tagList\":[],\"title\":\"Request from the API\",\"description\":\"API testing is easy\",\"body\":\"Angular is cool\"}}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 422 - Unprocessable Entity\nHeaders: {\n  \"date\": \"Thu, 01 Dec 2022 22:59:33 GMT\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"39\",\n  \"connection\": \"keep-alive\",\n  \"x-powered-by\": \"Express\",\n  \"access-control-allow-origin\": \"*\",\n  \"etag\": \"W/\\\"27-BNeuaWQ7DHvW/r+pl+qdJiF06Is\\\"\",\n  \"via\": \"1.1 vegur\",\n  \"cf-cache-status\": \"DYNAMIC\",\n  \"report-to\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=Inzk%2Be2jC07KlkxnoJdK5TXoTSDbqn8IIsrfYZoLM9XXGTc5UlYfystxJH2YWrJUsm3QNfpt4DWHxZS6BX%2BTg7HJLBQ2obvYjbOPekj%2Bg67STNpjP1PxPoa0OFTvX5S96g3n\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"nel\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"server\": \"cloudflare\",\n  \"cf-ray\": \"772f6f144dfcc321-VIE\",\n  \"alt-svc\": \"h3=\\\":443\\\"; ma=86400, h3-29=\\\":443\\\"; ma=86400\"\n}\nBody: {\n  \"errors\": {\n    \"title\": [\n      \"must be unique\"\n    ]\n  }\n}\n\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` failed on:\n\nhttps://api.realworld.io/api/articles/\n\nThe response we received from your web server was:\n\n  > 422: Unprocessable Entity\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: https://api.realworld.io/api/articles/\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Authorization\": \"Token eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImthZGlyLnp1a29ybGljQHRlc3QuY29tIiwidXNlcm5hbWUiOiJLYWRpciIsImlhdCI6MTY2OTkzNTU3MiwiZXhwIjoxNjc1MTE5NTcyfQ.WFBZY-ZthYpU1XO1GmawNPtjlCVx5yfAsABem35Z2hI\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/10.11.0 Chrome/106.0.5249.51 Electron/21.0.0 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 118\n}\nBody: {\"article\":{\"tagList\":[],\"title\":\"Request from the API\",\"description\":\"API testing is easy\",\"body\":\"Angular is cool\"}}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 422 - Unprocessable Entity\nHeaders: {\n  \"date\": \"Thu, 01 Dec 2022 22:59:33 GMT\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"39\",\n  \"connection\": \"keep-alive\",\n  \"x-powered-by\": \"Express\",\n  \"access-control-allow-origin\": \"*\",\n  \"etag\": \"W/\\\"27-BNeuaWQ7DHvW/r+pl+qdJiF06Is\\\"\",\n  \"via\": \"1.1 vegur\",\n  \"cf-cache-status\": \"DYNAMIC\",\n  \"report-to\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v3?s=Inzk%2Be2jC07KlkxnoJdK5TXoTSDbqn8IIsrfYZoLM9XXGTc5UlYfystxJH2YWrJUsm3QNfpt4DWHxZS6BX%2BTg7HJLBQ2obvYjbOPekj%2Bg67STNpjP1PxPoa0OFTvX5S96g3n\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"nel\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"server\": \"cloudflare\",\n  \"cf-ray\": \"772f6f144dfcc321-VIE\",\n  \"alt-svc\": \"h3=\\\":443\\\"; ma=86400, h3-29=\\\":443\\\"; ma=86400\"\n}\nBody: {\n  \"errors\": {\n    \"title\": [\n      \"must be unique\"\n    ]\n  }\n}\n\n\nhttps://on.cypress.io/request\n    at <unknown> (http://localhost:4200/__cypress/runner/cypress_runner.js:144155:80)\n    at tryCatcher (http://localhost:4200/__cypress/runner/cypress_runner.js:11318:23)\n    at Promise._settlePromiseFromHandler (http://localhost:4200/__cypress/runner/cypress_runner.js:9253:31)\n    at Promise._settlePromise (http://localhost:4200/__cypress/runner/cypress_runner.js:9310:18)\n    at Promise._settlePromise0 (http://localhost:4200/__cypress/runner/cypress_runner.js:9355:10)\n    at Promise._settlePromises (http://localhost:4200/__cypress/runner/cypress_runner.js:9435:18)\n    at _drainQueueStep (http://localhost:4200/__cypress/runner/cypress_runner.js:6025:12)\n    at _drainQueue (http://localhost:4200/__cypress/runner/cypress_runner.js:6018:9)\n    at ../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:4200/__cypress/runner/cypress_runner.js:6034:5)\n    at Async.drainQueues (http://localhost:4200/__cypress/runner/cypress_runner.js:5904:14)\nFrom Your Spec Code:\n    at Context.eval (webpack:///./cypress/integration/test.cy.ts:85:9)",
                "diff": null
              },
              "uuid": "fa560155-6773-4e70-a6f3-79347f548263",
              "parentUUID": "540bcc76-1453-454a-ba27-fb2db14ea8d2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5ff52b90-d701-4209-b64f-863a5c793a76",
            "889500d2-e8cd-4078-82c8-c81b4dd6f29e",
            "9efb98aa-a041-40c9-a7bf-6067723ea25c"
          ],
          "failures": [
            "fa560155-6773-4e70-a6f3-79347f548263"
          ],
          "pending": [],
          "skipped": [],
          "duration": 8109,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default"
      },
      "version": "6.2.0"
    }
  }
}